import{A as o,o as l}from"./chunk-Q7HNEB5Z.js";import{U as n,Y as p,c as s,x as t}from"./chunk-AKCSPO7I.js";var h=class r{constructor(e){this.http=e}apiUrl=`${o.apiUrl}/api/relationship`;getAllRelationships(){return this.http.get(this.apiUrl).pipe(t(this.handleError("getAllRelationships",[])))}getRelationshipsByMember(e){return this.http.get(`${this.apiUrl}/member/${e}`).pipe(t(this.handleError("getRelationshipsByMember",[])))}getRelationshipsByFamily(e){return this.http.get(`${this.apiUrl}/family/${e}`).pipe(t(this.handleError("getRelationshipsByFamily",[])))}getRelationshipById(e){return this.http.get(`${this.apiUrl}/${e}`).pipe(t(this.handleError("getRelationshipById")))}getMemberRelationshipsTree(e){return this.http.get(`${this.apiUrl}/member/${e}/tree`).pipe(t(this.handleError("getMemberRelationshipsTree")))}createRelationship(e){return this.http.post(this.apiUrl,e).pipe(t(this.handleError("createRelationship")))}updateRelationship(e,i){return this.http.put(`${this.apiUrl}/${e}`,i).pipe(t(this.handleError("updateRelationship")))}deleteRelationship(e){return this.http.delete(`${this.apiUrl}/${e}`).pipe(t(this.handleError("deleteRelationship",!1)))}checkRelationshipExists(e,i){return this.http.get(`${this.apiUrl}/check/${e}/${i}`).pipe(t(this.handleError("checkRelationshipExists",{exists:!1})))}handleError(e="operation",i){return b=>(console.error(`${e} failed: ${b.message}`),new s(a=>{i!==void 0&&a.next(i),a.complete()}))}static \u0275fac=function(i){return new(i||r)(p(l))};static \u0275prov=n({token:r,factory:r.\u0275fac,providedIn:"root"})};export{h as a};
